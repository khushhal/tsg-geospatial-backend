# Generated by Django 4.2.20 on 2025-04-09 12:00

import uuid

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("contenttypes", "0002_remove_content_type_name"),
    ]

    operations = [
        migrations.CreateModel(
            name="CensusBusiness",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "uuid",
                    models.UUIDField(
                        default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True
                    ),
                ),
                (
                    "total_employer_establishments",
                    models.BigIntegerField(help_text="Total employer establishments, 2022", null=True),
                ),
                ("total_employment", models.BigIntegerField(help_text="Total employment, 2022", null=True)),
                (
                    "total_annual_payroll",
                    models.DecimalField(
                        decimal_places=2, help_text="Total annual payroll, 2022 ($1,000)", max_digits=12, null=True
                    ),
                ),
                (
                    "total_employment_percent_change",
                    models.DecimalField(
                        decimal_places=2, help_text="Employment percent change (2021-2022)", max_digits=10, null=True
                    ),
                ),
                (
                    "total_nonemployer_establishments",
                    models.BigIntegerField(help_text="Total nonemployer establishments, 2022", null=True),
                ),
                ("all_employer_firms", models.BigIntegerField(help_text="All employer firms, 2022", null=True)),
                (
                    "men_owned_employer_firms",
                    models.CharField(blank=True, help_text="Men-owned employer firms, 2022", max_length=10, null=True),
                ),
                (
                    "women_owned_employer_firms",
                    models.BigIntegerField(blank=True, help_text="Women-owned employer firms, 2022", null=True),
                ),
                (
                    "minority_owned_employer_firms",
                    models.CharField(
                        blank=True, help_text="Minority-owned employer firms, 2022", max_length=10, null=True
                    ),
                ),
                (
                    "nonminority_owned_employer_firms",
                    models.CharField(
                        blank=True, help_text="Nonminority-owned employer firms, 2022", max_length=10, null=True
                    ),
                ),
                (
                    "veteran_owned_employer_firms",
                    models.CharField(
                        blank=True, help_text="Veteran-owned employer firms, 2022", max_length=10, null=True
                    ),
                ),
                (
                    "nonveteran_owned_employer_firms",
                    models.CharField(
                        blank=True, help_text="Nonveteran-owned employer firms, 2022", max_length=10, null=True
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="CensusDemographics",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "uuid",
                    models.UUIDField(
                        default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True
                    ),
                ),
                (
                    "persons_under_5_percent",
                    models.DecimalField(
                        decimal_places=2, help_text="Persons under 5 years (%)", max_digits=5, null=True
                    ),
                ),
                (
                    "persons_under_18_percent",
                    models.DecimalField(
                        decimal_places=2, help_text="Persons under 18 years (%)", max_digits=5, null=True
                    ),
                ),
                (
                    "persons_65_over_percent",
                    models.DecimalField(decimal_places=2, help_text="Persons 65+ years (%)", max_digits=5, null=True),
                ),
                (
                    "female_persons_percent",
                    models.DecimalField(decimal_places=2, help_text="Female persons (%)", max_digits=5, null=True),
                ),
                (
                    "white_alone_percent",
                    models.DecimalField(decimal_places=2, help_text="White alone (%)", max_digits=5, null=True),
                ),
                (
                    "black_alone_percent",
                    models.DecimalField(decimal_places=2, help_text="Black alone (%)", max_digits=5, null=True),
                ),
                (
                    "american_indian_alaska_native_percent",
                    models.DecimalField(
                        decimal_places=2, help_text="American Indian/Alaska Native (%)", max_digits=5, null=True
                    ),
                ),
                (
                    "asian_alone_percent",
                    models.DecimalField(decimal_places=2, help_text="Asian alone (%)", max_digits=5, null=True),
                ),
                (
                    "native_hawaiian_pacific_islander_percent",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Native Hawaiian/Other Pacific Islander (%)",
                        max_digits=5,
                        null=True,
                    ),
                ),
                (
                    "two_or_more_races_percent",
                    models.DecimalField(decimal_places=2, help_text="Two or more races (%)", max_digits=5, null=True),
                ),
                (
                    "hispanic_or_latino_percent",
                    models.DecimalField(decimal_places=2, help_text="Hispanic or Latino (%)", max_digits=5, null=True),
                ),
                (
                    "white_alone_not_hispanic_percent",
                    models.DecimalField(
                        decimal_places=2, help_text="White alone, not Hispanic (%)", max_digits=5, null=True
                    ),
                ),
                ("veterans_2019_2023", models.BigIntegerField(help_text="Veterans (2019-2023)", null=True)),
                (
                    "foreign_born_percent_2019_2023",
                    models.DecimalField(
                        decimal_places=2, help_text="Foreign-born (%) 2019-2023", max_digits=5, null=True
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="CensusGeography",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "uuid",
                    models.UUIDField(
                        default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True
                    ),
                ),
                (
                    "population_per_sq_mile_2020",
                    models.DecimalField(
                        decimal_places=2, help_text="Population per sq mile, 2020", max_digits=12, null=True
                    ),
                ),
                (
                    "population_per_sq_mile_2010",
                    models.DecimalField(
                        decimal_places=2, help_text="Population per sq mile, 2010", max_digits=12, null=True
                    ),
                ),
                (
                    "land_area_sq_miles_2020",
                    models.DecimalField(
                        decimal_places=2, help_text="Land area, sq miles, 2020", max_digits=12, null=True
                    ),
                ),
                (
                    "land_area_sq_miles_2010",
                    models.DecimalField(
                        decimal_places=2, help_text="Land area, sq miles, 2010", max_digits=12, null=True
                    ),
                ),
                ("fips_code", models.CharField(help_text="FIPS Code", max_length=10)),
            ],
            options={
                "ordering": ["-created_at"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="CensusPopulation",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "uuid",
                    models.UUIDField(
                        default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True
                    ),
                ),
                (
                    "pop_estimate_july_2024",
                    models.BigIntegerField(help_text="Population estimate, July 1, 2024 (V2024)", null=True),
                ),
                (
                    "pop_estimate_july_2023",
                    models.BigIntegerField(help_text="Population estimate, July 1, 2023 (V2023)", null=True),
                ),
                (
                    "pop_estimate_base_apr2020_v2024",
                    models.BigIntegerField(help_text="Population estimate base, April 1, 2020 (V2024)", null=True),
                ),
                (
                    "pop_estimate_base_apr2020_v2023",
                    models.BigIntegerField(help_text="Population estimate base, April 1, 2020 (V2023)", null=True),
                ),
                (
                    "pop_percent_change_apr2020_to_july2024",
                    models.DecimalField(
                        decimal_places=2, help_text="Percent change, Apr 2020 to Jul 2024", max_digits=5, null=True
                    ),
                ),
                (
                    "pop_percent_change_apr2020_to_july2023",
                    models.DecimalField(
                        decimal_places=2, help_text="Percent change, Apr 2020 to Jul 2023", max_digits=5, null=True
                    ),
                ),
                ("pop_census_apr2020", models.BigIntegerField(help_text="Census count, April 1, 2020", null=True)),
                ("pop_census_apr2010", models.BigIntegerField(help_text="Census count, April 1, 2010", null=True)),
            ],
            options={
                "ordering": ["-created_at"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="CensusSocioEconomicProfile",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "uuid",
                    models.UUIDField(
                        default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True
                    ),
                ),
                (
                    "housing_units_v2023",
                    models.BigIntegerField(help_text="Housing Units, July 1, 2023 (V2023)", null=True),
                ),
                (
                    "owner_occupied_rate",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Owner-occupied housing unit rate, 2019-2023 (%)",
                        max_digits=5,
                        null=True,
                    ),
                ),
                (
                    "median_owner_value",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Median value of owner-occupied housing units, 2019-2023 (in dollars)",
                        max_digits=12,
                        null=True,
                    ),
                ),
                (
                    "median_owner_cost_with_mortgage",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Median monthly owner cost with mortgage, 2019-2023 (in dollars)",
                        max_digits=12,
                        null=True,
                    ),
                ),
                (
                    "median_owner_cost_without_mortgage",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Median monthly owner cost without mortgage, 2019-2023 (in dollars)",
                        max_digits=12,
                        null=True,
                    ),
                ),
                (
                    "median_gross_rent",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Median gross rent, 2019-2023 (in dollars)",
                        max_digits=12,
                        null=True,
                    ),
                ),
                ("building_permits", models.BigIntegerField(help_text="Building Permits, 2023", null=True)),
                ("households", models.BigIntegerField(help_text="Households, 2019-2023", null=True)),
                (
                    "persons_per_household",
                    models.DecimalField(
                        decimal_places=2, help_text="Persons per household, 2019-2023", max_digits=4, null=True
                    ),
                ),
                (
                    "same_house_living_percent",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Percent of persons living in the same house 1 year ago, 2019-2023",
                        max_digits=5,
                        null=True,
                    ),
                ),
                (
                    "language_non_english_percent",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Percent speaking a language other than English at home (age 5+), 2019-2023",
                        max_digits=5,
                        null=True,
                    ),
                ),
                (
                    "households_with_computer_percent",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Households with a computer, percent, 2019-2023",
                        max_digits=5,
                        null=True,
                    ),
                ),
                (
                    "households_with_broadband_percent",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Households with a broadband Internet subscription, percent, 2019-2023",
                        max_digits=5,
                        null=True,
                    ),
                ),
                (
                    "high_school_grad_percent",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="High school graduate or higher, percent (age 25+), 2019-2023",
                        max_digits=5,
                        null=True,
                    ),
                ),
                (
                    "bachelors_degree_percent",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Bachelor's degree or higher, percent (age 25+), 2019-2023",
                        max_digits=5,
                        null=True,
                    ),
                ),
                (
                    "disability_percent",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Percent with a disability (under age 65), 2019-2023",
                        max_digits=5,
                        null=True,
                    ),
                ),
                (
                    "no_health_insurance_percent",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Percent without health insurance (under age 65)",
                        max_digits=5,
                        null=True,
                    ),
                ),
                (
                    "civilian_labor_force_total_percent",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Total civilian labor force, percent (age 16+), 2019-2023",
                        max_digits=5,
                        null=True,
                    ),
                ),
                (
                    "civilian_labor_force_female_percent",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Female civilian labor force, percent (age 16+), 2019-2023",
                        max_digits=5,
                        null=True,
                    ),
                ),
                (
                    "total_accommodation_food_sales",
                    models.BigIntegerField(
                        help_text="Total accommodation and food services sales, 2022 ($1,000)", null=True
                    ),
                ),
                (
                    "total_health_care_revenue",
                    models.BigIntegerField(
                        help_text="Total health care and social assistance receipts, 2022 ($1,000)", null=True
                    ),
                ),
                (
                    "total_transportation_revenue",
                    models.BigIntegerField(
                        help_text="Total transportation and warehousing receipts, 2022 ($1,000)", null=True
                    ),
                ),
                (
                    "total_retail_sales",
                    models.BigIntegerField(help_text="Total retail sales, 2022 ($1,000)", null=True),
                ),
                (
                    "total_retail_sales_per_capita",
                    models.DecimalField(
                        decimal_places=2, help_text="Total retail sales per capita, 2022", max_digits=12, null=True
                    ),
                ),
                (
                    "mean_travel_time",
                    models.DecimalField(
                        decimal_places=1,
                        help_text="Mean travel time to work (minutes), 2019-2023",
                        max_digits=4,
                        null=True,
                    ),
                ),
                (
                    "median_household_income",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Median household income (in 2023 dollars), 2019-2023",
                        max_digits=12,
                        null=True,
                    ),
                ),
                (
                    "per_capita_income",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Per capita income in past 12 months (in 2023 dollars), 2019-2023",
                        max_digits=12,
                        null=True,
                    ),
                ),
                (
                    "persons_in_poverty_percent",
                    models.DecimalField(
                        decimal_places=2, help_text="Percent of persons in poverty", max_digits=5, null=True
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="CensusProfile",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "uuid",
                    models.UUIDField(
                        default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True
                    ),
                ),
                ("year", models.PositiveIntegerField()),
                ("object_id", models.UUIDField()),
                (
                    "business",
                    models.ForeignKey(
                        blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to="census.censusbusiness"
                    ),
                ),
                (
                    "content_type",
                    models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="contenttypes.contenttype"),
                ),
                (
                    "demographics",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="census.censusdemographics",
                    ),
                ),
                (
                    "geography",
                    models.ForeignKey(
                        blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to="census.censusgeography"
                    ),
                ),
                (
                    "population",
                    models.ForeignKey(
                        blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to="census.censuspopulation"
                    ),
                ),
                (
                    "socio_economic",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="census.censussocioeconomicprofile",
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
                "abstract": False,
            },
        ),
    ]
